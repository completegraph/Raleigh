ggtitle("Box Cox - Tobacco Production - Australia")
tobacco_dcmp = tobacco_data %>% model( stl = STL(Tobacco)) %>% components()
tobacco_dcmp %>% autoplot(Tobacco)
ggplot(data=tobacco_dcmp) + geom_qq(aes(sample=remainder )) + geom_qq_line(aes(sample=remainder))
tobaccobc_dcmp = tobacco_data %>% model( stl = STL(TobaccoBC)) %>% components()
tobaccobc_dcmp %>% autoplot(TobaccoBC)
ggplot(data=tobaccobc_dcmp) + geom_qq(aes(sample=remainder )) + geom_qq_line(aes(sample=remainder))
melsyd = ansett %>%
filter( Airports == 'MEL-SYD' , Class == 'Economy' )
melsyd %>% autoplot(Passengers)
melsyd %>% filter_index('1987 W35' ~ '1987 W40')
# Save the modified passenger data into a new tsibble.
#
melsyd %>% fill_gaps() %>%
tidyr::fill(Passengers, .direction = 'down') -> melsyd2
melsyd2 %>% filter(Passengers == 0 )
P1988 = melsyd2 %>% filter_index('1988 W01' ~ '1988 W52') %>%
as_tibble() %>% summarize(mean(Passengers)) %>% magrittr::extract2(1)
P1988
P1989 = melsyd2 %>%
filter_index('1989 W01' ~ '1989 W52') %>%
filter( Passengers != 0) %>%
as_tibble() %>%
summarize(mean(Passengers)) %>% magrittr::extract2(1)
P1989
melsyd2[114:120,]
melsyd2[114:120,"Passengers"] = melsyd2[62:68, "Passengers"] * (P1989)/(P1988)
melsyd2[114:120,]
melsyd2 %>% gg_season(Passengers)
melsyd2
lambda<- melsyd2 %>%
features(Passengers, features = guerrero) %>%
pull(lambda_guerrero)
lambda
melsyd2$bc  = box_cox(melsyd2$Passengers, lambda)
autoplot(melsyd2, bc)
pedestrian %>%
filter(Sensor=="Southern Cross Station") %>%
fill_gaps(Count = as.integer(median(Count))) -> pedscs
# Count the number of zeros to confirm we can't use Guerrero
sum(pedscs$Count == 0 )
xcmp = pedscs %>% model( stl = STL(Count)) %>% components()
xcmp %>% autoplot(Count)
hist(xcmp$remainder, breaks = 50)
xcmp2 = pedscs %>%
mutate( bc = box_cox(Count, 0.1) ) %>%
model( stl = STL(bc)) %>% components()
xcmp2 %>% autoplot(bc)
hist(xcmp2$remainder, breaks = 50)
gas <- tail(aus_production, 5*4) %>%
select(Gas)
autoplot(gas, Gas) +
labs(title="Original: Last 20 observations of Gas Production",
subtitle="aus_production" )
# Seasonality is observed using gg_season plot.
gg_season(gas, Gas, period="year")
classic_dcmp <- gas %>%
model(
classical_decomposition(Gas, type = "multiplicative")
) %>%
components()
classic_dcmp %>%
autoplot() +
labs(title =
"Classical multiplicative decomposition: Gas",
caption = "Austrialia Gas Production")
classic_dcmp %>% autoplot(season_adjust) + labs(caption = "Seasonally adjusted gas production")
gasXMid = gas
gasXMid[10, "Gas"] = gas[10,"Gas"] + 300
classic_dcmp_mid <- gasXMid %>%
model(
classical_decomposition(Gas, type = "multiplicative")
) %>%
components()
classic_dcmp_mid %>%
autoplot() +
labs(title =
"Classical multiplicative decomposition: Gas Mid-Outlier",
caption = "Australia Gas Production")
classic_dcmp_mid %>%
autoplot(season_adjust) +
labs(caption = "Seasonally adjusted gas production with Mid-Outlier")
gasXEnd = gas
gasXEnd[20, "Gas"] = gas[20,"Gas"] + 300
classic_dcmp_end <- gasXEnd %>%
model(
classical_decomposition(Gas, type = "multiplicative")
) %>%
components()
classic_dcmp_end %>%
autoplot() +
labs(title =
"Classical multiplicative decomposition: Gas End-Outlier",
caption = "Austrialia Gas Production")
classic_dcmp_end %>%
autoplot(season_adjust) +
labs(caption = "Seasonally adjusted gas production with shock at end")
# We replicate the Time Series used in HW 1 Exercise by using the same seed.
set.seed(392381)
myseries <- aus_retail %>%
filter(`Series ID` == sample(aus_retail$`Series ID`, 1 ))
# Import the seasonal library where X_13ARIMA_SEATS is available
library(seasonal)
x11_dcmp <- myseries %>%
model(x11 = X_13ARIMA_SEATS(Turnover ~ x11())) %>%
components()
autoplot(x11_dcmp ) +
labs( title =
"Decomposition of Pharmaeutical, cosmetic, toiletry turnover using X-11",
caption = "Western Australia")
classic_dcmp <- myseries %>%
model(
classical_decomposition(Turnover, type = "multiplicative")
) %>%
components()
classic_dcmp %>%
autoplot() +
labs(title =
"Classical multiplicative decomposition: Pharmaceuticals, cosmetics, toiletry",
caption = "Western Australia")
library(ggrepel)
turnover_compare = classic_dcmp %>% select(Month, random)
turnover_compare$x11err = x11_dcmp$irregular
ggplot(turnover_compare, aes(x=x11err, y=random)) +
geom_point(alpha=0.6) +
ggtitle("Residuals Between X11 and Classical Decomposition") +
geom_label_repel(aes(label=ifelse(  abs(x11err - 1) > 0.095 |
abs(random - 1) > 0.095,                                                                                                   as.character(Month), "") ) ,
color="red", point.padding = 0.3, box.padding = 0.3) +
xlab("X11 residual") + ylab("Classical residual") +
labs(caption="Outliers labeled if absolute residual exceeds 9.5%")
tobacco_dcmp = tobacco_data %>% model( stl = STL(Tobacco)) %>% components()
tobacco_dcmp %>% autoplot(Tobacco)
ggplot(data=tobacco_dcmp) + geom_qq(aes(sample=remainder )) + geom_qq_line(aes(sample=remainder)) + labs(title="QQNorm of Tobacco")
tobaccobc_dcmp = tobacco_data %>% model( stl = STL(TobaccoBC)) %>% components()
tobaccobc_dcmp %>% autoplot(TobaccoBC)
ggplot(data=tobaccobc_dcmp) + geom_qq(aes(sample=remainder )) + geom_qq_line(aes(sample=remainder)) + labs(title="QQNorm of Box-Cox Tobacco")
melsyd2$bc  = box_cox(melsyd2$Passengers, lambda)
autoplot(melsyd2, bc)
lambda<- melsyd2 %>%
features(Passengers, features = guerrero) %>%
pull(lambda_guerrero)
lambda
melsyd2bc_dcmp = melsyd2 %>% model( stl = STL(bc)) %>% components()
melsyd2bc_dcmp %>% autoplot(bc)
ggplot(data=melsyd2bc_dcmp) + geom_qq(aes(sample=remainder )) + geom_qq_line(aes(sample=remainder)) + labs(title="QQNorm of Box-Cox Mel-Syd Passengers")
lambda = 0.5
melsyd2$bc  = box_cox(melsyd2$Passengers, lambda)
autoplot(melsyd2, bc)
melsyd2bc_dcmp = melsyd2 %>% model( stl = STL(bc)) %>% components()
melsyd2bc_dcmp %>% autoplot(bc)
ggplot(data=melsyd2bc_dcmp) + geom_qq(aes(sample=remainder )) + geom_qq_line(aes(sample=remainder)) + labs(title="QQNorm of Box-Cox Mel-Syd Passengers")
lambda = 0.2
melsyd2$bc  = box_cox(melsyd2$Passengers, lambda)
autoplot(melsyd2, bc)
melsyd2bc_dcmp = melsyd2 %>% model( stl = STL(bc)) %>% components()
melsyd2bc_dcmp %>% autoplot(bc)
ggplot(data=melsyd2bc_dcmp) + geom_qq(aes(sample=remainder )) + geom_qq_line(aes(sample=remainder)) + labs(title="QQNorm of Box-Cox Mel-Syd Passengers")
lambda = 0.1
melsyd2$bc  = box_cox(melsyd2$Passengers, lambda)
autoplot(melsyd2, bc)
melsyd2bc_dcmp = melsyd2 %>% model( stl = STL(bc)) %>% components()
melsyd2bc_dcmp %>% autoplot(bc)
ggplot(data=melsyd2bc_dcmp) + geom_qq(aes(sample=remainder )) + geom_qq_line(aes(sample=remainder)) + labs(title="QQNorm of Box-Cox Mel-Syd Passengers")
lambda = 0
melsyd2$bc  = box_cox(melsyd2$Passengers, lambda)
autoplot(melsyd2, bc)
melsyd2bc_dcmp = melsyd2 %>% model( stl = STL(bc)) %>% components()
melsyd2bc_dcmp %>% autoplot(bc)
ggplot(data=melsyd2bc_dcmp) + geom_qq(aes(sample=remainder )) + geom_qq_line(aes(sample=remainder)) + labs(title="QQNorm of Box-Cox Mel-Syd Passengers")
lambda = 0
melsyd2$bc  = box_cox(melsyd2$Passengers, lambda)
autoplot(melsyd2, bc)
melsyd2
lambda<- melsyd2 %>%
features(Passengers, features = guerrero) %>%
pull(lambda_guerrero)
lambda
melsyd2$bc  = box_cox(melsyd2$Passengers, lambda)
autoplot(melsyd2, bc)
melsyd2bc_dcmp = melsyd2 %>% model( stl = STL(bc)) %>% components()
melsyd2bc_dcmp %>% autoplot(bc)
ggplot(data=melsyd2bc_dcmp) + geom_qq(aes(sample=remainder )) + geom_qq_line(aes(sample=remainder)) + labs(title="QQNorm of Box-Cox Mel-Syd Passengers")
xcmp = pedscs %>% model( stl = STL(Count)) %>% components()
xcmp %>% autoplot(Count)
ggplot(data=xcmp) + geom_qq(aes(sample=remainder )) + geom_qq_line(aes(sample=remainder)) + labs(title="QQNorm of Pedestrians")
xcmp2 = pedscs %>%
mutate( bc = box_cox(Count, 0.1) ) %>%
model( stl = STL(bc)) %>% components()
xcmp2 %>% autoplot(bc)
ggplot(data=xcmp2) + geom_qq(aes(sample=remainder )) +
geom_qq_line(aes(sample=remainder)) + labs(title="QQNorm of Pedestrians")
xcmp2 = pedscs %>%
mutate( bc = box_cox(Count, 0) ) %>%
model( stl = STL(bc)) %>% components()
xcmp2 = pedscs %>%
mutate( bc = box_cox(Count, 0) ) %>%
model( stl = STL(bc)) %>% components()
xcmp2 = pedscs %>%
mutate( bc = box_cox(Count, 0.1) ) %>%
model( stl = STL(bc)) %>% components()
xcmp2 %>% autoplot(bc)
ggplot(data=xcmp2) + geom_qq(aes(sample=remainder )) +
geom_qq_line(aes(sample=remainder)) + labs(title="QQNorm of Box Cox Pedestrians")
xcmp2 = pedscs %>%
mutate( bc = box_cox(Count, 0.5) ) %>%
model( stl = STL(bc)) %>% components()
xcmp2 %>% autoplot(bc)
ggplot(data=xcmp2) + geom_qq(aes(sample=remainder )) +
geom_qq_line(aes(sample=remainder)) + labs(title="QQNorm of Box Cox Pedestrians")
xcmp2 = pedscs %>%
mutate( bc = box_cox(Count, 0.7) ) %>%
model( stl = STL(bc)) %>% components()
xcmp2 %>% autoplot(bc)
ggplot(data=xcmp2) + geom_qq(aes(sample=remainder )) +
geom_qq_line(aes(sample=remainder)) + labs(title="QQNorm of Box Cox Pedestrians")
xcmp2 = pedscs %>%
mutate( bc = box_cox(Count, 0.3) ) %>%
model( stl = STL(bc)) %>% components()
xcmp2 %>% autoplot(bc)
ggplot(data=xcmp2) + geom_qq(aes(sample=remainder )) +
geom_qq_line(aes(sample=remainder)) + labs(title="QQNorm of Box Cox Pedestrians")
xcmp2 = pedscs %>%
mutate( bc = box_cox(Count, .9) ) %>%
model( stl = STL(bc)) %>% components()
xcmp2 %>% autoplot(bc)
ggplot(data=xcmp2) + geom_qq(aes(sample=remainder )) +
geom_qq_line(aes(sample=remainder)) + labs(title="QQNorm of Box Cox Pedestrians")
xcmp2 = pedscs %>%
mutate( bc = box_cox(Count, 1.2) ) %>%
model( stl = STL(bc)) %>% components()
xcmp2 %>% autoplot(bc)
ggplot(data=xcmp2) + geom_qq(aes(sample=remainder )) +
geom_qq_line(aes(sample=remainder)) + labs(title="QQNorm of Box Cox Pedestrians")
xcmp2 = pedscs %>%
mutate( bc = box_cox(Count, -0.1) ) %>%
model( stl = STL(bc)) %>% components()
xcmp2 = pedscs %>%
mutate( bc = box_cox(Count, -.5) ) %>%
model( stl = STL(bc)) %>% components()
xcmp2 = pedscs %>%
mutate( bc = box_cox(Count, -0.5) ) %>%
model( stl = STL(bc)) %>% components()
xcmp2 = pedscs %>%
mutate( bc = box_cox(Count, -0.05) ) %>%
model( stl = STL(bc)) %>% components()
xcmp2 = pedscs %>%
mutate( bc = box_cox(Count, 0.05) ) %>%
model( stl = STL(bc)) %>% components()
xcmp2 %>% autoplot(bc)
ggplot(data=xcmp2) + geom_qq(aes(sample=remainder )) +
geom_qq_line(aes(sample=remainder)) + labs(title="QQNorm of Box Cox Pedestrians")
xcmp2 = pedscs %>%
mutate( bc = box_cox(Count, 0.04) ) %>%
model( stl = STL(bc)) %>% components()
xcmp2 %>% autoplot(bc)
ggplot(data=xcmp2) + geom_qq(aes(sample=remainder )) +
geom_qq_line(aes(sample=remainder)) + labs(title="QQNorm of Box Cox Pedestrians")
xcmp2 = pedscs %>%
mutate( bc = box_cox(Count, 0.4) ) %>%
model( stl = STL(bc)) %>% components()
xcmp2 %>% autoplot(bc)
ggplot(data=xcmp2) + geom_qq(aes(sample=remainder )) +
geom_qq_line(aes(sample=remainder)) + labs(title="QQNorm of Box Cox Pedestrians")
xcmp2 = pedscs %>%
mutate( bc = box_cox(Count, 1.2) ) %>%
model( stl = STL(bc)) %>% components()
xcmp2 %>% autoplot(bc)
ggplot(data=xcmp2) + geom_qq(aes(sample=remainder )) +
geom_qq_line(aes(sample=remainder)) + labs(title="QQNorm of Box Cox Pedestrians")
xcmp2 = pedscs %>%
mutate( bc = box_cox(Count, 1.5) ) %>%
model( stl = STL(bc)) %>% components()
xcmp2 %>% autoplot(bc)
ggplot(data=xcmp2) + geom_qq(aes(sample=remainder )) +
geom_qq_line(aes(sample=remainder)) + labs(title="QQNorm of Box Cox Pedestrians")
xcmp2 = pedscs %>%
mutate( bc = box_cox(Count, 1.7) ) %>%
model( stl = STL(bc)) %>% components()
xcmp2 %>% autoplot(bc)
ggplot(data=xcmp2) + geom_qq(aes(sample=remainder )) +
geom_qq_line(aes(sample=remainder)) + labs(title="QQNorm of Box Cox Pedestrians")
pedestrian
hist(pedscs$Count)
pedestrian %>% filter(Sensor == "Southern Cross Station")
pedestrian %>% filter(Sensor == "Southern Cross Station") -> ped1
hist(ped1$Count)
hist(pedscs$Count)
median(pedscs$Count)
median(ped1$Count)
ped1 %>% fill_gaps(Count=0) -> ped_zero
hist(ped_zero$Count)
xcmp_zero = ped_zero %>% model( stl = STL(Count)) %>% components()
xcmp_zero %>% autoplot(Count)
ggplot(data=xcmp_zero) + geom_qq(aes(sample=remainder )) +     geom_qq_line(aes(sample=remainder))
xcmp_zero2 = ped_zero %>% mutate( bc = box_cox(Count, 0.5)) %>% model(stl=STL(bc)) %>% components()
xcmp_zero2 %>% autoplot(bc)
ggplot(data=xcmp_zero2) + geom_qq(aes(sample=remainder )) +     geom_qq_line(aes(sample=remainder))
pedestrian %>%
filter(Sensor=="Southern Cross Station") -> ped1
ped1 %>% fill_gaps(Count = as.integer(median(Count))) -> pedscs
pedestrian %>%
filter(Sensor=="Southern Cross Station") -> ped1
ped1 %>% fill_gaps(Count = as.integer(median(Count))) -> pedscs
# Show that zero counts are frequent in the dataset.
hist(ped1$Count)
# Show that zero counts are frequent in the dataset.
hist(ped1$Count, breaks = 40 )
pedestrian %>%
filter(Sensor=="Southern Cross Station") -> ped1
#ped1 %>% fill_gaps(Count = as.integer(median(Count))) -> pedscs
ped1 %>% tidyr::fill(Passengers, .direction = 'down') -> pedscs
pedestrian %>%
filter(Sensor=="Southern Cross Station") -> ped1
#ped1 %>% fill_gaps(Count = as.integer(median(Count))) -> pedscs
ped1 %>% tidyr::fill(Count, .direction = 'down') -> pedscs
# Show that zero counts are frequent in the dataset.
hist(ped1$Count, breaks = 40 )
# Show that zero counts are frequent in the dataset.
hist(pedscs$Count, breaks = 40 )
# Show that zero counts are frequent in the dataset.
hist(pedscs$Count, breaks = 40 )
pedestrian %>%
filter(Sensor=="Southern Cross Station") -> ped1
#ped1 %>% fill_gaps(Count = as.integer(median(Count))) -> pedscs
ped1 %>% tidyr::fill(Count, .direction = 'down') -> pedscs
# Show that zero counts are frequent in the dataset.
hist(pedscs$Count, breaks = 40 )
xcmp = pedscs %>% model( stl = STL(Count)) %>% components()
# Show that zero counts are frequent in the dataset.
hist(pedscs$Count, breaks = 40 )
pedestrian %>%
filter(Sensor=="Southern Cross Station") -> ped1
#ped1 %>% fill_gaps(Count = as.integer(median(Count))) -> pedscs
ped1 %>% tidyr::fill(Count, .direction = 'down') -> pedscs
# Show that zero counts are frequent in the dataset.
hist(pedscs$Count, breaks = 40 )
xcmp = pedscs %>% model( stl = STL(Count)) %>% components()
pedestrian %>%
filter(Sensor=="Southern Cross Station") -> ped1
#ped1 %>% fill_gaps(Count = as.integer(median(Count))) -> pedscs
ped1 %>% fill_gaps() %>%
tidyr::fill(Count, .direction = 'down') -> pedscs
# Show that zero counts are frequent in the dataset.
hist(pedscs$Count, breaks = 40 )
xcmp = pedscs %>% model( stl = STL(Count)) %>% components()
xcmp %>% autoplot(Count)
ggplot(data=xcmp) + geom_qq(aes(sample=remainder )) +
geom_qq_line(aes(sample=remainder)) + labs(title="QQNorm of Pedestrians")
lambda = 0.1
xcmp2 = pedscs %>%
mutate( bc = box_cox(Count, lambda) ) %>%
model( stl = STL(bc)) %>% components()
xcmp2 %>% autoplot(bc)
ggplot(data=xcmp2) + geom_qq(aes(sample=remainder )) +
geom_qq_line(aes(sample=remainder)) + labs(title="QQNorm of Box Cox Pedestrians")
By trial and error, we observe the $\lambda=0.1$ allows reducing some of these residual tails and smooths out the clumping of the annual and daily plots as shown below.   However, the Q-Q plot shows significant departures from normality at the tail.  So we conclude Box-Cox does not solve the challenge of modeling this time series effectively.
lambda = 0.1
xcmp2 = pedscs %>%
mutate( bc = box_cox(Count, lambda) ) %>%
model( stl = STL(bc)) %>% components()
xcmp2 %>% autoplot(bc)
ggplot(data=xcmp2) + geom_qq(aes(sample=remainder )) +
geom_qq_line(aes(sample=remainder)) + labs(title="QQNorm of Box Cox Pedestrians")
install.packages("bookdown")
5172080 - 5083387
View(colMap)
library(spatstat)
library(raster)
library(tidyverse)
r <- raster(ncol = 36, nrow = 18)
r
xy <- c(0,0)
d1 = distanceFromPoints(r, xy)
d1
crs(r) = '+proj=utm +zone=12 +datum=WGS84'
d2 <- distanceFromPoints(r, xy)
par(mfrow=c(1,2))
plot(d1)
plot(d2)
d1$layer
d1$layer$layer
dimensions(d1)
attr(d1, "dimensions")
2021 - 1953
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(kableExtra)
library(sf)
library(ggspatial)
proj_dir = "/Volumes/GDRIVE_SSD/homes/alex/datascience/698_CAPSTONE_2021_FALL"
working_dir = paste0(proj_dir, "/", "project_code/Part2_GeoMapping/")
data_dir = paste0(proj_dir, "/project_data/")
setwd(working_dir)
raleigh_corporate_limits_file = paste0(data_dir, "Corporate_Limits.geojson")
#
# Load the geojson files
# change the coordinate system to 2264
# filter objects that belong to RALEIGHT
# --------------------------------------------
gj_raleigh <- sf::st_read(raleigh_corporate_limits_file, quiet = TRUE) %>%
st_transform(2264) %>%
filter( SHORT_NAME == 'RAL' )
# Compute the total square miles of the polygons.
# The NAD83 North Carolina projection uses square ft.
# ------------------------------------------------------
area_of_polygons = st_area(gj_raleigh)
sprintf( "Raleigh Area is: %.2f square miles.  Wikipedia gives: 147.64 sq mi" , sum(area_of_polygons) / ( 5280^2)  )
gj_raleigh %>% ggplot() + geom_sf( fill = "skyblue", color = "darkred", size = 0.1) +
labs(title = "Raleigh City Limits in Color")
gj_raleigh %>% ggplot() + geom_sf( fill = "skyblue", color = "darkred") +
labs(title = "Raleigh City:  Basemap , Compass, Alpha Blending") +
annotation_map_tile(type="osm", progress = "none", alpha = 0.5 ) +
annotation_north_arrow(location="bl", which_north = "true")
# This gives measurements in feet.
grid_cellsize = 5000
a1 = st_make_valid(gj_raleigh) %>% st_make_grid(cellsize=grid_cellsize )
a1 %>% ggplot() + geom_sf( color = "green") +
geom_sf(data=gj_raleigh, fill="skyblue", alpha = 0.5 ) +
annotation_map_tile(type="osm", progress = "none", alpha = 0.5 )
# make bounding box
grid_from_a1 = a1 %>% st_sf() %>% mutate( id_grid = 1:nrow(.))
raleigh_bbox = st_bbox( a1 )
# Calculate the number of rows and columns
nCols = ceiling(( raleigh_bbox[3] - raleigh_bbox[1] ) / grid_cellsize )
nRows = ceiling(( raleigh_bbox[4] - raleigh_bbox[2] ) / grid_cellsize )
# Define a label scheme on each grid cell.
#
#
grid_from_a1_rclab =  a1 %>% st_sf() %>% mutate(id_grid = 1:nrow(.))  %>%
mutate( cols = rep(1:nCols, nRows ) ,
rows = unlist( lapply(1:nRows, rep, nCols) ) ) %>%
group_by(id_grid) %>%
mutate( lab = paste(rows, "-", cols,  collapse = '') ) %>%
dplyr::filter(id_grid %in% unlist( st_intersects(gj_raleigh, .)))  # Omit grid cells not in raleigh
grid_from_a1_rclab %>% ggplot() + geom_sf() +
geom_text( aes( label = lab, geometry = geometry),
stat = "sf_coordinates" , size = 1.3) +
geom_sf(data=gj_raleigh, fill="skyblue", alpha = 0.5 ) +
annotation_map_tile(type="osm", progress = "none", alpha = 0.5 )
gj_assault_geocoded = st_read(paste0(data_dir, "EXP_RALEIGH_SUBSET_201801_assaults_Aug2021.geojson" ) )
head(gj_assault_geocoded)
grid_from_a1_rclab %>% ggplot() + geom_sf(size=0.5) +
geom_text( aes( label = lab, geometry = geometry),
stat = "sf_coordinates" , size = 1.3) +
geom_sf(data=gj_assault_geocoded, color = "red", size = 0.3) +
geom_sf(data=gj_raleigh, fill="skyblue", alpha = 0.5 ) +
annotation_map_tile(type="osm", progress = "none", alpha = 0.5 )
gj_assault_wake_forest = gj_assault_geocoded  %>%
filter( str_detect(reported_block_address, "WAKE FOREST RD" ) ) %>%
arrange(reported_block_address)
gj_assault_wake_forest %>% select(reported_block_address, OBJECTID, district, reported_date)
gj_assault_wake_forest %>% st_join( grid_from_a1_rclab) %>% select(OBJECTID, reported_block_address, reported_date, lab, id_grid)
cells_to_crimes = grid_from_a1_rclab %>% st_join( gj_assault_wake_forest) %>% select(OBJECTID, reported_block_address, reported_date, lab, id_grid)
dim(cells_to_crimes)
grid_from_a1_rclab %>% st_join(gj_assault_wake_forest) %>% group_by(id_grid, lab) %>%
summarize( ct = sum( !is.na(OBJECTID))) %>%
st_drop_geometry() %>% arrange(desc(ct)) %>% head(n=10) %>%
kable() %>% kable_styling(bootstrap_options = c("hover", "striped"))
cell_results = grid_from_a1_rclab %>% st_join(gj_assault_geocoded) %>% group_by(id_grid, lab) %>%
summarize( ct = sum( !is.na(OBJECTID))) %>%
st_drop_geometry() %>% arrange(desc(ct))
cell_results %>%  kable() %>% kable_styling(bootstrap_options = c("hover", "striped"))
gj_raleigh_buffer = st_buffer(gj_raleigh, dist = 100 ) %>% st_union() %>% st_sf() %>% mutate( id_buffer = 1:nrow(.))
gj_raleigh_buffer %>% ggplot() + geom_sf( fill = "skyblue", color = "darkred") +
labs(title = "Raleigh City:  Buffered, Alpha Blending") +
annotation_map_tile(type="osm", progress = "none", alpha = 0.5 )
a1buffer = st_make_valid(gj_raleigh_buffer) %>% st_make_grid(cellsize=grid_cellsize )
a1buffer %>% ggplot() + geom_sf( color = "green") +
geom_sf(data=gj_raleigh_buffer, fill="skyblue", alpha = 0.5 ) +
annotation_map_tile(type="osm", progress = "none", alpha = 0.5 )
# make bounding box
grid_from_a1buffer = a1buffer %>% st_sf() %>% mutate( id_grid = 1:nrow(.))
raleigh_buff_bbox = st_bbox( a1buffer )
# Calculate the number of rows and columns
nColsBuff = ceiling(( raleigh_buff_bbox[3] - raleigh_buff_bbox[1] ) / grid_cellsize )
nRowsBuff = ceiling(( raleigh_buff_bbox[4] - raleigh_buff_bbox[2] ) / grid_cellsize )
# Define a label scheme on each grid cell.
#
#
grid_from_a1buffer_rclab =  a1buffer %>% st_sf() %>% mutate(id_grid = 1:nrow(.))  %>%
mutate( cols = rep(1:nCols, nRows ) ,
rows = unlist( lapply(1:nRows, rep, nCols) ) ) %>%
group_by(id_grid) %>%
mutate( lab = paste(rows, "-", cols,  collapse = '') ) %>%
dplyr::filter(id_grid %in% unlist( st_intersects(gj_raleigh_buffer, .)))
gj_assault_hist = st_read(paste0(data_dir, "EXP_EDA_RALEIGH_assaults_Aug2021.geojson" ) )
head(gj_assault_hist)
gj_assault_hist %>% st_join(grid_from_a1buffer_rclab) %>% select(OBJECTID, reported_block_address, reported_date, id_grid) %>%
st_drop_geometry() %>%
filter(is.na(id_grid)) %>% group_by(reported_block_address) %>% summarize( ct = n())
setwd("/Volumes/GDRIVE_SSD/homes/alex/datascience/698_CAPSTONE_2021_FALL/project_data/north-carolina-latest-free.shp")
library(tidyverse)
library(dplyr)
library(sf)
test_nc_shp = st_read("gis_osm_pois_a_free_1.shp")
info(test_nc_shp)
test_nc_shp
head(test_nc_shp)
test_nc_points = st_read("gis_osm_pois_free_1.shp")
test_nc_points
plot(test_nc_points)
test_nc_points %>% st_drop_geometry() -> test_nc_nogeo_pts
test_nc_nogeo_pts %>% group_by(fclass) %>% summarize(n())
test_nc_nogeo_pts %>% group_by(fclass) %>% summarize(ct= n()) %>% arrange(desc(ct))
test_nc_nogeo_pts %>% group_by(fclass) %>% summarize(ct= n()) %>% arrange(desc(ct)) %>% top_n(n=30)
test_nc_nogeo_pts %>% group_by(fclass) %>% summarize(ct= n()) %>% arrange(desc(ct)) %>% head(n=30)
test_nc_nogeo_pts %>% group_by(fclass) %>% summarize(ct= n()) %>% arrange(desc(ct)) %>% head(n=30) %>% View()
test_nc_nogeo_pts
1155 + 2469
155 + 2469
14 + 155 + 2469
