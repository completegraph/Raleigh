poverty_B17017_raw = st_read( paste0(data_dir, pov_root, "/", pov_root, ".geojson" )
#                                        "acs2019_5yr_B17017_15000US371830529022/acs2019_5yr_B17017_15000US371830529022.geojson"
, quiet = TRUE ) %>% st_transform(2264)
poverty_B17017_raw %>%
select( geoid, name, B17017001, B17017002 ) %>%
filter( name  != 'Raleigh-Cary, NC Metro Area')  %>%
mutate( poverty_rate = ifelse( B17017001 == 0, .6, B17017002 / B17017001) )  %>%
mutate( area = st_area(.)) -> gj_poverty
gj_poverty
tail(poverty_B17017_raw)
tail(poverty_B17017_raw, n = 1 ) %>% select(name, geoid)
regional_avg_poverty_rate = poverty_B17017_raw %>% filter( geoid == "31000US39580") %>% mutate( rate = B17017002 / B17017001)[['rate']]
regional_avg_poverty_rate = poverty_B17017_raw %>% filter( geoid == "31000US39580") %>% mutate( rate = B17017002 / B17017001)
regional_avg_poverty_rate
regional_avg_poverty_rate = poverty_B17017_raw %>% filter( geoid == "31000US39580") %>% mutate( rate = B17017002 / B17017001) %>% select(rate)[["rate"]]
regional_avg_poverty_rate = poverty_B17017_raw %>% filter( geoid == "31000US39580") %>% mutate( rate = B17017002 / B17017001) %>% select(rate)
regional_avg_poverty_rate
regional_avg_poverty_rate$rate
regional_avg_poverty_rate = poverty_B17017_raw %>% filter( geoid == "31000US39580") %>% mutate( rate = B17017002 / B17017001) %>% select(rate)$rate
regional_avg_poverty_rate = poverty_B17017_raw %>% filter( geoid == "31000US39580") %>% mutate( rate = B17017002 / B17017001) %>% (select(rate))['rate']
regional_avg_poverty_rate = poverty_B17017_raw %>% filter( geoid == "31000US39580") %>% mutate( rate = B17017002 / B17017001) %>% (select(rate))[['rate']]
temp_pov = poverty_B17017_raw %>% filter( geoid == "31000US39580") %>% mutate( rate = B17017002 / B17017001)
regional_avg_poverty_rate = temp_pov[1,1]
regional_avg_poverty_rate
temp_pov = poverty_B17017_raw %>% filter( geoid == "31000US39580") %>% mutate( rate = B17017002 / B17017001)  %>% st_drop_geometry()
regional_avg_poverty_rate = temp_pov[1,1]
regional_avg_poverty_rate
temp_pov
temp_pov = poverty_B17017_raw %>% filter( geoid == "31000US39580") %>% mutate( rate = B17017002 / B17017001)  %>% select( geoid, name, rate) %>% st_drop_geometry()
regional_avg_poverty_rate = temp_pov[1,3]
regional_avg_poverty_rate
poverty_B17017_raw %>%
select( geoid, name, B17017001, B17017002 ) %>%
filter( name  != 'Raleigh-Cary, NC Metro Area')  %>%
mutate( poverty_rate = ifelse( B17017001 == 0, regional_avg_poverty_rate , B17017002 / B17017001) )  %>%
mutate( area = st_area(.)) -> gj_poverty
gj_poverty$poverty_rate
pov_root = "acs2019_5yr_B17017_15000US371830529022"
poverty_B17017_raw = st_read( paste0(data_dir, pov_root, "/", pov_root, ".geojson" )
, quiet = TRUE ) %>% st_transform(2264)
temp_pov = poverty_B17017_raw %>% filter( geoid == "31000US39580") %>% mutate( rate = B17017002 / B17017001)  %>% select( geoid, name, rate) %>% st_drop_geometry()
regional_avg_poverty_rate = temp_pov[1,3]
poverty_B17017_raw %>%
select( geoid, name, B17017001, B17017002 ) %>%
filter( name  != 'Raleigh-Cary, NC Metro Area')  %>%
mutate( poverty_rate = ifelse( B17017001 == 0, regional_avg_poverty_rate , B17017002 / B17017001) )  %>%
mutate( area = st_area(.)) -> gj_poverty
gj_poverty_leaf = st_transform(gj_poverty, 4326)
p_popup <- paste0("Poverty: ", format(round(gj_poverty$poverty_rate, 3), nsmall = 3 ), "<br>" ,
"Name: ", gj_poverty$name ,
"Geoid: ", gj_poverty$geoid )
# get quantile breaks. Add .00001 offset to catch the lowest value
breaks_qt <- classIntervals(c(min(gj_poverty$poverty_rate) - .00001,
gj_poverty$poverty_rate), n = 7, style = "quantile")
breaks_qt
leaflet( gj_poverty_leaf ) %>% addPolygons( stroke = FALSE, # Remove polygon borders
fillColor = ~pal_fun(poverty_rate),  # set fill color with function from above and value
fillOpacity = 0.5 ,
smoothFactor = 0.5, # make it nicer
popup = p_popup
) %>% addTiles() %>%
addLegend( "bottomright", # Location
colors = brewer.pal(7, "Spectral") ,
labels = paste0("up to ", format(breaks_qt$brks[-1], digits = 2)) ,
title = "Raleigh Poverty rate by Census Block Group"
)
gj_poverty_leaf = st_transform(gj_poverty, 4326)
p_popup <- paste0("Poverty: ", format(round(gj_poverty$poverty_rate, 3), nsmall = 3 ), "<br>" ,
"Name: ", gj_poverty$name , "<br>" ,
"Geoid: ", gj_poverty$geoid, "<br>" )
# get quantile breaks. Add .00001 offset to catch the lowest value
breaks_qt <- classIntervals(c(min(gj_poverty$poverty_rate) - .00001,
gj_poverty$poverty_rate), n = 7, style = "quantile")
breaks_qt
leaflet( gj_poverty_leaf ) %>% addPolygons( stroke = FALSE, # Remove polygon borders
fillColor = ~pal_fun(poverty_rate),  # set fill color with function from above and value
fillOpacity = 0.5 ,
smoothFactor = 0.5, # make it nicer
popup = p_popup
) %>% addTiles() %>%
addLegend( "bottomright", # Location
colors = brewer.pal(7, "Spectral") ,
labels = paste0("up to ", format(breaks_qt$brks[-1], digits = 2)) ,
title = "Raleigh Poverty rate by Census Block Group"
)
unemp_root = "acs2019_5yr_B23025_15000US371830529022"
unemp_B23025_raw = st_read( paste0(data_dir, pov_root, "/", pov_root, ".geojson" )
, quiet = TRUE ) %>% st_transform(2264)
unemp_B23025_raw %>% head(n=2)
tail(unemp_B23025_raw, n = 1 ) %>% st_drop_geometry() %>% select( geoid, names())
tail(unemp_B23025_raw, n = 1 ) %>% st_drop_geometry() %>% select( geoid, name )
temp_unemp = unemp_B23025_raw %>% filter( geoid == "31000US39580") %>% mutate( rate = B23025005 / B23025001)  %>% select( geoid, name, rate) %>% st_drop_geometry()
temp_unemp = unemp_B23025_raw %>% filter( geoid == "31000US39580") #%>% mutate( rate = B23025005 / B23025001)  %>% select( geoid, name, rate) %>% st_drop_geometry()
#regional_avg_unemp_rate = temp_unemp[1,3]
temp_unemp
unemp_root = "acs2019_5yr_B23025_15000US371830529022"
unemp_B23025_raw = st_read( paste0(data_dir, unemp_root, "/", unemp_root, ".geojson" )
, quiet = TRUE ) %>% st_transform(2264)
temp_unemp = unemp_B23025_raw %>% filter( geoid == "31000US39580") #%>% mutate( rate = B23025005 / B23025001)  %>% select( geoid, name, rate) %>% st_drop_geometry()
#regional_avg_unemp_rate = temp_unemp[1,3]
temp_unemp
temp_unemp = unemp_B23025_raw %>% filter( geoid == "31000US39580") %>%
mutate( rate = B23025005 / B23025001)  %>%
select( geoid, name, rate) %>% st_drop_geometry()
#regional_avg_unemp_rate = temp_unemp[1,3]
temp_unemp
temp_unemp = unemp_B23025_raw %>% filter( geoid == "31000US39580") %>%
mutate( rate = B23025005 / B23025001)  %>%
select( geoid, name, rate) %>% st_drop_geometry()
regional_avg_unemp_rate = temp_unemp[1,3]
regional_avg_unemp_rate
unemp_root = "acs2019_5yr_B23025_15000US371830529022"
unemp_B23025_raw = st_read( paste0(data_dir, unemp_root, "/", unemp_root, ".geojson" )
, quiet = TRUE ) %>% st_transform(2264)
temp_unemp = unemp_B23025_raw %>% filter( geoid == "31000US39580") %>%
mutate( rate = B23025005 / B23025001)  %>%
select( geoid, name, rate) %>% st_drop_geometry()
regional_avg_unemp_rate = temp_unemp[1,3]
unemp_B23025_raw %>%
select( geoid, name, B23025005, B23025001 ) %>%
filter( name  != 'Raleigh-Cary, NC Metro Area')  %>%
mutate( poverty_rate = ifelse( B23025001  == 0, regional_avg_unemp_rate , B23025005 / B23025001) )  %>%
mutate( area = st_area(.)) -> gj_unemp
gj_unemp
unemp_B23025_raw %>%
select( geoid, name, B23025005, B23025001 ) %>%
filter( name  != 'Raleigh-Cary, NC Metro Area')  %>%
mutate( unemployment_rate = ifelse( B23025001  == 0, regional_avg_unemp_rate , B23025005 / B23025001) )  %>%
mutate( area = st_area(.)) -> gj_unemp
gj_unemp
temp_unemp
temp_unemp %>% pull(rate)
xx = temp_unemp %>% pull(rate)
xx
class(xx)
regional_avg_unemp_rate  = unemp_B23025_raw %>% filter( geoid == "31000US39580") %>%
mutate( rate = B23025005 / B23025001)  %>%
select( geoid, name, rate) %>% pull( rate )
#regional_avg_unemp_rate = temp_unemp[1,3]
regional_avg_unemp_rate
regional_avg_poverty_rate = poverty_B17017_raw %>% filter( geoid == "31000US39580") %>% mutate( rate = B17017002 / B17017001)  %>% select( geoid, name, rate) %>% st_drop_geometry() %>% pull(rate)
#regional_avg_poverty_rate = temp_pov[1,3]
regional_avg_poverty_rate
regional_avg_unemp_rate  = unemp_B23025_raw %>%
filter( geoid == "31000US39580") %>%
mutate( rate = B23025005 / B23025001)  %>%
pull( rate )
unemp_B23025_raw %>%
select( geoid, name, B23025005, B23025001 ) %>%
filter( name  != 'Raleigh-Cary, NC Metro Area')  %>%
mutate( unemployment_rate = ifelse( B23025001  == 0, regional_avg_unemp_rate , B23025005 / B23025001) )  %>%
mutate( area = st_area(.)) -> gj_unemp
gj_unemp_leaf = st_transform(gj_unemp, 4326)
p_popup <- paste0("Unemp: ", format(round(100 * gj_unemp$unemployment_rate, 1), nsmall = 1 ), "<br>" ,
"Name: ", gj_unemp$name , "<br>" ,
"Geoid: ", gj_unemp$geoid, "<br>" )
# get quantile breaks. Add .00001 offset to catch the lowest value
breaks_qt <- classIntervals(c(min(gj_unemp$unemployment_rate) - .00001,
gj_unemp$unemployment_rate), n = 7, style = "quantile")
breaks_qt
leaflet( gj_unemp_leaf ) %>% addPolygons( stroke = FALSE, # Remove polygon borders
fillColor = ~pal_fun(unemployment_rate),  # set fill color with function from above and value
fillOpacity = 0.5 ,
smoothFactor = 0.5, # make it nicer
popup = p_popup
) %>% addTiles() %>%
addLegend( "bottomright", # Location
colors = brewer.pal(7, "Spectral") ,
labels = paste0("up to ", format(breaks_qt$brks[-1], digits = 2)) ,
title = "Raleigh Unemployment Rate by Census Block Group"
)
leaflet( gj_unemp_leaf ) %>% addPolygons( stroke = FALSE, # Remove polygon borders
fillColor = ~pal_fun(unemployment_rate),  # set fill color with function from above and value
fillOpacity = 0.5 ,
smoothFactor = 0.5, # make it nicer
popup = p_popup
) %>% addTiles() %>%
addLegend( "bottomright", # Location
colors = brewer.pal(7, "Spectral") ,
labels = paste0("up to ", format(breaks_qt$brks[-1], digits = 2)) ,
title = "Raleigh Unemployment By Block Group"
)
library(classInt)
library(RColorBrewer)
ggplot() + geom_sf(data=gj_unemployment , aes( fill = unemployed_rate , color = unemployed_rate )  ) +
scale_fill_viridis_c( alpha = .4) +
annotation_map_tile(type="osm", progress = "none", alpha = 0.5 )
employment_B23025_raw %>%
select( geoid, name, B23025001, B23025005 ) %>%
filter( name  != 'Raleigh-Cary, NC Metro Area')  %>%
mutate( unemployed_rate = ifelse( B23025001 == 0, .6, B23025005 / B23025001) )  %>%
mutate( area = st_area(.)) -> gj_unemployment
ggplot() + geom_sf(data=gj_unemp , aes( fill = unemployment_rate , color = unemployment_rate )  ) +
scale_fill_viridis_c( alpha = .4) +
annotation_map_tile(type="osm", progress = "none", alpha = 0.5 )
ggplot() + geom_sf(data=gj_unemp , aes( fill = unemployment_rate  )  ) +
scale_fill_viridis_c( alpha = .4) +
annotation_map_tile(type="osm", progress = "none", alpha = 0.5 )
setwd("/Volumes/GDRIVE_SSD/homes/alex/datascience/698_CAPSTONE_2021_FALL/project_data/acs2019_5yr_B19013_15000US371830523011")
income_root = "acs2019_5yr_B19013_15000US371830523011"
income_B19013_raw = st_read( paste0(data_dir, income_root, "/", income_root, ".geojson" )
, quiet = TRUE ) %>% st_transform(2264)
tail(income_B19013_raw)
regional_avg_income  = income_B19013_raw %>%
filter( geoid == "31000US39580") %>%
mutate( income = B19013001)  %>%
pull( income )
regional_avg_income
tail(income_B19013_raw)
income_B19013_raw %>% filter( is.na(B19013001 ) | B19013001 == 0 )
head(income_B19013_raw)
income_B19103_raw %>%
select( geoid, name, B19013001 ) %>%
mutate( income = ifelse( is.na(B19013001) | B19013001  == 0, regional_avg_income , B19013001) )  %>%
mutate( area = st_area(.)) -> gj_income
income_root = "acs2019_5yr_B19013_15000US371830523011"
income_B19013_raw = st_read( paste0(data_dir, income_root, "/", income_root, ".geojson" )
, quiet = TRUE ) %>% st_transform(2264)
regional_avg_income  = 80096  # Median household income for Raleigh/Cary Metro Area in 2019 inflated adjusted dollars
income_B19103_raw %>%
select( geoid, name, B19013001 ) %>%
mutate( income = ifelse( is.na(B19013001) | B19013001  == 0, regional_avg_income , B19013001) )  %>%
mutate( area = st_area(.)) -> gj_income
income_B19013_raw
income_B19103_raw %>%
select( geoid, name, B19013001 ) #%>%
income_root = "acs2019_5yr_B19013_15000US371830523011"
income_B19013_raw = st_read( paste0(data_dir, income_root, "/", income_root, ".geojson" )
, quiet = TRUE ) %>% st_transform(2264)
regional_avg_income  = 80096  # Median household income for Raleigh/Cary Metro Area in 2019 inflated adjusted dollars
income_B19103_raw %>%
select( geoid, name, B19013001 ) #%>%
income_B19103_raw %>%  select( geoid, name, B19013001 ) #%>%
head(income_B19013_raw)
#income_B19103_raw %>%  select( geoid, name, B19013001 ) #%>%
#  mutate( income = ifelse( is.na(B19013001) | B19013001  == 0, regional_avg_income , B19013001) )  %>%
# mutate( area = st_area(.)) -> gj_income
head(income_B19013_raw)
income_B19103_raw %>%  select( geoid, name, B19013001 ) #%>%
head(income_B19013_raw)
income_B19013_raw %>%  select( geoid, name, B19013001 ) #%>%
#  mutate( income = ifelse( is.na(B19013001) | B19013001  == 0, regional_avg_income , B19013001) )  %>%
# mutate( area = st_area(.)) -> gj_income
head(income_B19013_raw)
income_B19013_raw %>%  select( geoid, name, B19013001 ) %>%
mutate( income = ifelse( is.na(B19013001) | B19013001  == 0, regional_avg_income , B19013001) )  %>%
mutate( area = st_area(.)) -> gj_income
regional_avg_income  = 80096  # Median household income for Raleigh/Cary Metro Area in 2019 inflated adjusted dollars
income_B19013_raw %>%  select( geoid, name, B19013001 ) %>%
mutate( income = ifelse( is.na(B19013001) | B19013001  == 0, regional_avg_income , B19013001) )  %>%
mutate( area = st_area(.)) -> gj_income
income_B19013_raw %>%  select( geoid, name, B19013001 ) %>%
mutate( income = ifelse( is.na(B19013001) | B19013001  == 0, regional_avg_income , B19013001) )  %>%
mutate( area = st_area(.)) -> gj_income
gj_income_leaf = st_transform(gj_income, 4326)
p_popup <- paste0("Income: $", format(round( gj_income$income, 0), nsmall = 0 ), "<br>" ,
"Name: ", gj_income$name , "<br>" ,
"Geoid: ", gj_income$geoid, "<br>" )
# get quantile breaks. Add .00001 offset to catch the lowest value
breaks_qt <- classIntervals(c(min(gj_income$income) - .00001,
gj_income$income), n = 6, style = "quantile")
breaks_qt
leaflet( gj_income_leaf ) %>% addPolygons( stroke = FALSE, # Remove polygon borders
fillColor = ~pal_fun(income),  # set fill color with function from above and value
fillOpacity = 0.5 ,
smoothFactor = 0.5, # make it nicer
popup = p_popup
) %>% addTiles() %>%
addLegend( "bottomright", # Location
colors = brewer.pal(6, "Spectral") ,
labels = paste0("up to ", format(breaks_qt$brks[-1], digits = 2)) ,
title = "Raleigh Median Household Income"
)
leaflet( gj_income_leaf ) %>% addPolygons( stroke = FALSE, # Remove polygon borders
fillColor = ~pal_fun(income),  # set fill color with function from above and value
fillOpacity = 0.5 ,
smoothFactor = 0.5, # make it nicer
popup = p_popup
) %>% addTiles() %>%
addLegend( "bottomright", # Location
colors = brewer.pal(6, "Spectral") ,
labels = paste0("up to ", format(breaks_qt$brks[-1], digits = 2)) ,
title = "Raleigh Median Household Income"
)
leaflet( gj_unemp_leaf ) %>% addPolygons( stroke = FALSE, # Remove polygon borders
fillColor = ~pal_fun(unemployment_rate),  # set fill color with function from above and value
fillOpacity = 0.5 ,
smoothFactor = 0.5, # make it nicer
popup = p_popup
) %>% addTiles() %>%
addLegend( "bottomright", # Location
colors = brewer.pal(7, "Spectral") ,
labels = paste0("up to ", format(breaks_qt$brks[-1], digits = 2)) ,
title = "Raleigh Unemployment By Block Group"
)
unemp_root = "acs2019_5yr_B23025_15000US371830529022"
unemp_B23025_raw = st_read( paste0(data_dir, unemp_root, "/", unemp_root, ".geojson" )
, quiet = TRUE ) %>% st_transform(2264)
regional_avg_unemp_rate  = unemp_B23025_raw %>%
filter( geoid == "31000US39580") %>%
mutate( rate = B23025005 / B23025001)  %>%
pull( rate )
unemp_B23025_raw %>%
select( geoid, name, B23025005, B23025001 ) %>%
filter( name  != 'Raleigh-Cary, NC Metro Area')  %>%
mutate( unemployment_rate = ifelse( B23025001  == 0, regional_avg_unemp_rate , B23025005 / B23025001) )  %>%
mutate( area = st_area(.)) -> gj_unemp
gj_unemp_leaf = st_transform(gj_unemp, 4326)
p_popup <- paste0("Unemp: ", format(round(100 * gj_unemp$unemployment_rate, 1), nsmall = 1 ), "<br>" ,
"Name: ", gj_unemp$name , "<br>" ,
"Geoid: ", gj_unemp$geoid, "<br>" )
# get quantile breaks. Add .00001 offset to catch the lowest value
breaks_qt <- classIntervals(c(min(gj_unemp$unemployment_rate) - .00001,
gj_unemp$unemployment_rate), n = 7, style = "quantile")
breaks_qt
pov_root = "acs2019_5yr_B17017_15000US371830529022"
poverty_B17017_raw = st_read( paste0(data_dir, pov_root, "/", pov_root, ".geojson" )
, quiet = TRUE ) %>% st_transform(2264)
regional_avg_poverty_rate = poverty_B17017_raw %>%
filter( geoid == "31000US39580") %>%
mutate( rate = B17017002 / B17017001)  %>%
pull(rate)
poverty_B17017_raw %>%
select( geoid, name, B17017001, B17017002 ) %>%
filter( name  != 'Raleigh-Cary, NC Metro Area')  %>%
mutate( poverty_rate = ifelse( B17017001 == 0, regional_avg_poverty_rate , B17017002 / B17017001) )  %>%
mutate( area = st_area(.)) -> gj_poverty
pal_fun = colorQuantile("Spectral", NULL , n = 6)
gj_poverty_leaf = st_transform(gj_poverty, 4326)
p_popup <- paste0("Poverty: ", format(round(gj_poverty$poverty_rate, 3), nsmall = 3 ), "<br>" ,
"Name: ", gj_poverty$name , "<br>" ,
"Geoid: ", gj_poverty$geoid, "<br>" )
# get quantile breaks. Add .00001 offset to catch the lowest value
breaks_qt <- classIntervals(c(min(gj_poverty$poverty_rate) - .00001,
gj_poverty$poverty_rate), n = 6, style = "quantile")
breaks_qt
leaflet( gj_poverty_leaf ) %>% addPolygons( stroke = FALSE, # Remove polygon borders
fillColor = ~pal_fun(poverty_rate),  # set fill color with function from above and value
fillOpacity = 0.5 ,
smoothFactor = 0.5, # make it nicer
popup = p_popup
) %>% addTiles() %>%
addLegend( "bottomright", # Location
colors = brewer.pal(6, "Spectral") ,
labels = paste0("up to ", format(breaks_qt$brks[-1], digits = 2)) ,
title = "Raleigh Poverty rate by Census Block Group"
)
unemp_root = "acs2019_5yr_B23025_15000US371830529022"
unemp_B23025_raw = st_read( paste0(data_dir, unemp_root, "/", unemp_root, ".geojson" )
, quiet = TRUE ) %>% st_transform(2264)
regional_avg_unemp_rate  = unemp_B23025_raw %>%
filter( geoid == "31000US39580") %>%
mutate( rate = B23025005 / B23025001)  %>%
pull( rate )
unemp_B23025_raw %>%
select( geoid, name, B23025005, B23025001 ) %>%
filter( name  != 'Raleigh-Cary, NC Metro Area')  %>%
mutate( unemployment_rate = ifelse( B23025001  == 0, regional_avg_unemp_rate , B23025005 / B23025001) )  %>%
mutate( area = st_area(.)) -> gj_unemp
gj_unemp_leaf = st_transform(gj_unemp, 4326)
p_popup <- paste0("Unemp: ", format(round(100 * gj_unemp$unemployment_rate, 1), nsmall = 1 ), "<br>" ,
"Name: ", gj_unemp$name , "<br>" ,
"Geoid: ", gj_unemp$geoid, "<br>" )
# get quantile breaks. Add .00001 offset to catch the lowest value
breaks_qt <- classIntervals(c(min(gj_unemp$unemployment_rate) - .00001,
gj_unemp$unemployment_rate), n = 6, style = "quantile")
breaks_qt
leaflet( gj_unemp_leaf ) %>% addPolygons( stroke = FALSE, # Remove polygon borders
fillColor = ~pal_fun(unemployment_rate),  # set fill color with function from above and value
fillOpacity = 0.5 ,
smoothFactor = 0.5, # make it nicer
popup = p_popup
) %>% addTiles() %>%
addLegend( "bottomright", # Location
colors = brewer.pal(6, "Spectral") ,
labels = paste0("up to ", format(breaks_qt$brks[-1], digits = 2)) ,
title = "Raleigh Unemployment By Block Group"
)
ggplot() + geom_sf(data=gj_unemp , aes( fill = unemployment_rate  )  ) +
scale_fill_viridis_c( alpha = .4) +
annotation_map_tile(type="osm", progress = "none", alpha = 0.5 )
income_root = "acs2019_5yr_B19013_15000US371830523011"
income_B19013_raw = st_read( paste0(data_dir, income_root, "/", income_root, ".geojson" )
, quiet = TRUE ) %>% st_transform(2264)
regional_avg_income  = 80096  # Median household income for Raleigh/Cary Metro Area in 2019 inflated adjusted dollars
income_B19013_raw %>%  select( geoid, name, B19013001 ) %>%
mutate( income = ifelse( is.na(B19013001) | B19013001  == 0, regional_avg_income , B19013001) )  %>%
mutate( area = st_area(.)) -> gj_income
gj_income_leaf = st_transform(gj_income, 4326)
p_popup <- paste0("Income: $", format(round( gj_income$income, 0), nsmall = 0 ), "<br>" ,
"Name: ", gj_income$name , "<br>" ,
"Geoid: ", gj_income$geoid, "<br>" )
# get quantile breaks. Add .00001 offset to catch the lowest value
breaks_qt <- classIntervals(c(min(gj_income$income) - .00001,
gj_income$income), n = 6, style = "quantile")
breaks_qt
leaflet( gj_income_leaf ) %>% addPolygons( stroke = FALSE, # Remove polygon borders
fillColor = ~pal_fun(income),  # set fill color with function from above and value
fillOpacity = 0.5 ,
smoothFactor = 0.5, # make it nicer
popup = p_popup
) %>% addTiles() %>%
addLegend( "bottomright", # Location
colors = brewer.pal(6, "Spectral") ,
labels = paste0("up to ", format(breaks_qt$brks[-1], digits = 2)) ,
title = "Raleigh Median Household Income"
)
gj_income_leaf = st_transform(gj_income, 4326)
p_popup <- paste0("Income: $", format(round( gj_income$income, 0), nsmall = 0 ), "<br>" ,
"Name: ", gj_income$name , "<br>" ,
"Geoid: ", gj_income$geoid, "<br>" )
# get quantile breaks. Add .00001 offset to catch the lowest value
breaks_qt <- classIntervals(c(min(gj_income$income) - .00001,
gj_income$income), n = 6, style = "quantile")
breaks_qt
leaflet( gj_income_leaf ) %>% addPolygons( stroke = FALSE, # Remove polygon borders
fillColor = ~pal_fun(income),  # set fill color with function from above and value
fillOpacity = 0.5 ,
smoothFactor = 0.5, # make it nicer
popup = p_popup
) %>% addTiles() %>%
addLegend( "bottomright", # Location
colors = brewer.pal(6, "Spectral") ,
labels = paste0("up to ", format(breaks_qt$brks[-1], digits = 2)) ,
title = "Raleigh Median Household Income"
)
income_B19013_raw
gj_income$name
income_B19013_raw$name
View(income_B19013_raw)
View(income_B19013_raw %>% st_drop_geometry() )
View(income_B19013_raw %>% st_drop_geometry()  %>% select( - B19013001..Error) )
length(income_B19013_raw$geoid)
str_len(income_B19013_raw$geoid)
stringr::str_length(income_B19013_raw$geoid)
income_B19013_raw %>%  select( geoid, name, B19013001 ) %>%
filter( str_length(geoid) == 19 ) %>%  # Filter out the higher level aggregate regions shown by shorter geoid like Cary, NC, Raleigh, NC, etc.
mutate( income = ifelse( is.na(B19013001) | B19013001  == 0, regional_avg_income , B19013001) )  %>%
mutate( area = st_area(.)) -> gj_income
gj_income_leaf = st_transform(gj_income, 4326)
p_popup <- paste0("Income: $", format(round( gj_income$income, 0), nsmall = 0 ), "<br>" ,
"Name: ", gj_income$name , "<br>" ,
"Geoid: ", gj_income$geoid, "<br>" )
# get quantile breaks. Add .00001 offset to catch the lowest value
breaks_qt <- classIntervals(c(min(gj_income$income) - .00001,
gj_income$income), n = 6, style = "quantile")
breaks_qt
leaflet( gj_income_leaf ) %>% addPolygons( stroke = FALSE, # Remove polygon borders
fillColor = ~pal_fun(income),  # set fill color with function from above and value
fillOpacity = 0.5 ,
smoothFactor = 0.5, # make it nicer
popup = p_popup
) %>% addTiles() %>%
addLegend( "bottomright", # Location
colors = brewer.pal(6, "Spectral") ,
labels = paste0("up to ", format(breaks_qt$brks[-1], digits = 2)) ,
title = "Raleigh Median Household Income"
)
income_root = "acs2019_5yr_B19013_15000US371830523011"
income_B19013_raw = st_read( paste0(data_dir, income_root, "/", income_root, ".geojson" )
, quiet = TRUE ) %>% st_transform(2264)
regional_avg_income  = 67266  # Median household income for Raleigh city in 2019 inflated adjusted dollars
income_B19013_raw %>%  select( geoid, name, B19013001 ) %>%
filter( str_length(geoid) == 19 ) %>%  # Filter out the higher level aggregate regions shown by shorter geoid like Cary, NC, Raleigh, NC, etc.
mutate( income = ifelse( is.na(B19013001) | B19013001  == 0, regional_avg_income , B19013001) )  %>%
mutate( area = st_area(.)) -> gj_income
income_B19013_raw %>%  select( geoid, name, B19013001 ) %>%
# filter( str_length(geoid) == 19 ) %>%  # Filter out the higher level aggregate regions shown by shorter geoid like Cary, NC, Raleigh, NC, etc.
mutate( income = ifelse( is.na(B19013001) | B19013001  == 0, regional_avg_income , B19013001) )  %>%
mutate( area = st_area(.)) -> gj_income
gj_income_leaf = st_transform(gj_income, 4326)
p_popup <- paste0("Income: $", format(round( gj_income$income, 0), nsmall = 0 ), "<br>" ,
"Name: ", gj_income$name , "<br>" ,
"Geoid: ", gj_income$geoid, "<br>" )
# get quantile breaks. Add .00001 offset to catch the lowest value
breaks_qt <- classIntervals(c(min(gj_income$income) - .00001,
gj_income$income), n = 6, style = "quantile")
breaks_qt
leaflet( gj_income_leaf ) %>% addPolygons( stroke = FALSE, # Remove polygon borders
fillColor = ~pal_fun(income),  # set fill color with function from above and value
fillOpacity = 0.5 ,
smoothFactor = 0.5, # make it nicer
popup = p_popup
) %>% addTiles() %>%
addLegend( "bottomright", # Location
colors = brewer.pal(6, "Spectral") ,
labels = paste0("up to ", format(breaks_qt$brks[-1], digits = 2)) ,
title = "Raleigh Median Household Income"
)
income_B19013_raw %>%  select( geoid, name, B19013001 ) %>%
filter( str_length(geoid) == 19 ) %>%  # Filter out the higher level aggregate regions shown by shorter geoid like Cary, NC, Raleigh, NC, etc.
mutate( income = ifelse( is.na(B19013001) | B19013001  == 0, regional_avg_income , B19013001) )  %>%
mutate( area = st_area(.)) -> gj_income
gj_income_leaf = st_transform(gj_income, 4326)
p_popup <- paste0("Income: $", format(round( gj_income$income, 0), nsmall = 0 ), "<br>" ,
"Name: ", gj_income$name , "<br>" ,
"Geoid: ", gj_income$geoid, "<br>" )
# get quantile breaks. Add .00001 offset to catch the lowest value
breaks_qt <- classIntervals(c(min(gj_income$income) - .00001,
gj_income$income), n = 6, style = "quantile")
breaks_qt
leaflet( gj_income_leaf ) %>% addPolygons( stroke = FALSE, # Remove polygon borders
fillColor = ~pal_fun(income),  # set fill color with function from above and value
fillOpacity = 0.5 ,
smoothFactor = 0.5, # make it nicer
popup = p_popup
) %>% addTiles() %>%
addLegend( "bottomright", # Location
colors = brewer.pal(6, "Spectral") ,
labels = paste0("up to ", format(breaks_qt$brks[-1], digits = 2)) ,
title = "Raleigh Median Household Income"
)
